name: Build and Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: hardware_monitor
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: hardware_monitor.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: hardware_monitor

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
        components: rustfmt, clippy

    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libudev-dev

    - name: Build
      run: cargo build --verbose --release

    - name: Run tests
      run: cargo test --verbose

    - name: Package
      shell: bash
      run: |
        mkdir -p release
        cd target/release
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          7z a ../../release/hardware_monitor-${{ matrix.target }}.zip ${{ matrix.binary_name }}
          sha256sum ${{ matrix.binary_name }} > ../../release/hardware_monitor-${{ matrix.target }}.sha256
        else
          tar czf ../../release/hardware_monitor-${{ matrix.target }}.tar.gz ${{ matrix.binary_name }}
          sha256sum ${{ matrix.binary_name }} > ../../release/hardware_monitor-${{ matrix.target }}.sha256
        fi
        cd ../..

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: hardware_monitor-${{ matrix.target }}
        path: |
          release/hardware_monitor-${{ matrix.target }}.*
        retention-days: 5

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          name: Hardware Monitor ${{ github.ref }}
          body: |
            Hardware Monitor Release ${{ github.ref }}
            
            ## 下载
            - [Windows x64](hardware_monitor-x86_64-pc-windows-msvc.zip)
            - [Linux x64](hardware_monitor-x86_64-unknown-linux-gnu.tar.gz)
            - [macOS x64](hardware_monitor-x86_64-apple-darwin.tar.gz)
            
            SHA256 校验和文件包含在每个发布包中。
          draft: false
          prerelease: false
          files: |
            artifacts/**/*.zip
            artifacts/**/*.tar.gz
            artifacts/**/*.sha256